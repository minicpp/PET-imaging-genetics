function [FID,IID,bin,cat1,t1ppSlope,t1pcSlope,t1gcSlope,t1pp,t1pc,t1gc,t2pp,t2pc,t2gc,t3pp,t3pc,t3gc,sex,age,weight,race] = importTraceForPCA(filename, startRow, endRow)
%IMPORTFILE Import numeric data from a text file as column vectors.
%   [FID,IID,BIN,CAT1,T1PPSLOPE,T1PCSLOPE,T1GCSLOPE,T1PP,T1PC,T1GC,T2PP,T2PC,T2GC,T3PP,T3PC,T3GC,SEX,AGE,WEIGHT,RACE]
%   = IMPORTFILE(FILENAME) Reads data from text file FILENAME for the
%   default selection.
%
%   [FID,IID,BIN,CAT1,T1PPSLOPE,T1PCSLOPE,T1GCSLOPE,T1PP,T1PC,T1GC,T2PP,T2PC,T2GC,T3PP,T3PC,T3GC,SEX,AGE,WEIGHT,RACE]
%   = IMPORTFILE(FILENAME, STARTROW, ENDROW) Reads data from rows STARTROW
%   through ENDROW of text file FILENAME.
%
% Example:
%   [FID,IID,bin,cat1,t1ppSlope,t1pcSlope,t1gcSlope,t1pp,t1pc,t1gc,t2pp,t2pc,t2gc,t3pp,t3pc,t3gc,sex,age,weight,race]
%   = importfile('v1_trace_PCA.txt',2, 77);
%
%    See also TEXTSCAN.

% Auto-generated by MATLAB on 2015/01/08 17:12:31

%% Initialize variables.
delimiter = '\t';
if nargin<=2
    startRow = 2;
    endRow = inf;
end

%% Format string for each line of text:
%   column1: double (%f)
%	column2: text (%s)
%   column3: double (%f)
%	column4: text (%s)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
%	column8: double (%f)
%   column9: double (%f)
%	column10: double (%f)
%   column11: double (%f)
%	column12: double (%f)
%   column13: double (%f)
%	column14: double (%f)
%   column15: double (%f)
%	column16: double (%f)
%   column17: double (%f)
%	column18: double (%f)
%   column19: double (%f)
%	column20: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%s%f%s%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to format string.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow(1)-startRow(1)+1, 'Delimiter', delimiter, 'EmptyValue' ,NaN,'HeaderLines', startRow(1)-1, 'ReturnOnError', false);
for block=2:length(startRow)
    frewind(fileID);
    dataArrayBlock = textscan(fileID, formatSpec, endRow(block)-startRow(block)+1, 'Delimiter', delimiter, 'EmptyValue' ,NaN,'HeaderLines', startRow(block)-1, 'ReturnOnError', false);
    for col=1:length(dataArray)
        dataArray{col} = [dataArray{col};dataArrayBlock{col}];
    end
end

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
FID = dataArray{:, 1};
IID = dataArray{:, 2};
bin = dataArray{:, 3};
cat1 = dataArray{:, 4};
t1ppSlope = dataArray{:, 5};
t1pcSlope = dataArray{:, 6};
t1gcSlope = dataArray{:, 7};
t1pp = dataArray{:, 8};
t1pc = dataArray{:, 9};
t1gc = dataArray{:, 10};
t2pp = dataArray{:, 11};
t2pc = dataArray{:, 12};
t2gc = dataArray{:, 13};
t3pp = dataArray{:, 14};
t3pc = dataArray{:, 15};
t3gc = dataArray{:, 16};
sex = dataArray{:, 17};
age = dataArray{:, 18};
weight = dataArray{:, 19};
race = dataArray{:, 20};


